# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: ./mvnw clean package -DskipTests
      # Then run your tests!
      - run:
          name: Test
          command: ./mvnw test
  create-image:          
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          name: Build Docker Image
          command: docker build -f src/main/docker/Dockerfile.jvm -t guimsmendes/buckets-summary-producer-jvm .
      - run:
          name: Login to Registry
          command: docker login --username=_ --password=$$(heroku auth:token) registry.heroku.com
      - run:
          name: Tag Image
          command: docker tag guimsmendes/buckets-summary-producer-jvm:latest registry.heroku.com/buckets-summary-producer/web:1
      - run:
          name: Push to Registry
          command: docker push registry.heroku.com/buckets-summary-producer/web:1
  deploy:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          name: Export Id
          command: export IMAGE_ID=$$(docker image inspect registry.heroku.com/buckets-summary-producer/web:1 -f {{.Id}})
      - run:
          name: Deploy
          command: "curl -X PATCH \
            -H \"Authorization: Bearer $$(heroku auth:token)\" \
            -H \"Content-Type: application/json\" \
            -H \"Accept:application/vnd.heroku+json; version=3.docker-releases\" \
            -d '{ \"updates\": [{\"type\": \"web\",  \"docker_image\": \"$(IMAGE_ID)\"}] }' \
            https://api.heroku.com/apps/buckets-summary-producer/formation"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - create-image:
          requires: 
          - build-and-test
      - deploy:
          requires: 
          - create-image